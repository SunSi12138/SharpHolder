on:
  push:
    branches:
      - main
  tags:
    - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Publish for Windows
      run: dotnet publish -c Release --r win-x64 -o ./publish/win-x64 /p:PublishAot=true
    - name: Publish for Linux x64
      run: dotnet publish -c Release --r linux-x64 -o ./publish/linux-x64 /p:PublishAot=true
    - name: Publish for Linux ARM64
      run: dotnet publish -c Release --r linux-arm64 -o ./publish/linux-arm64 /p:PublishAot=true
    - name: Publish for OSX ARM64
      run: dotnet publish -c Release --r osx-arm64 -o ./publish/osx-arm64 /p:PublishAot=true
    - name: Extract tag name
      id: extract_tag
      run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"
    - name: Zip Windows Publish Output
      run: zip -r publish/win-x64/SharpHolder-${{ steps.extract_tag.outputs.tag }}-win-x64.zip publish/win-x64/
    - name: Zip Linux x64 Publish Output
      run: zip -r publish/linux-x64/SharpHolder-${{ steps.extract_tag.outputs.tag }}-linux-x64.zip publish/linux-x64/
    - name: Zip Linux ARM64 Publish Output
      run: zip -r publish/linux-arm64/SharpHolder-${{ steps.extract_tag.outputs.tag }}-linux-arm64.zip publish/linux-arm64/
    - name: Zip OSX ARM64 Publish Output
      run: zip -r publish/osx-arm64/SharpHolder-${{ steps.extract_tag.outputs.tag }}-osx-arm64.zip publish/osx-arm64/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/win-x64/SharpHolder-win-x64.zip
        asset_name: SharpHolder-win-x64.zip
        asset_content_type: application/zip
    - name: Upload Linux x64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/linux-x64/SharpHolder-linux-x64.zip
        asset_name: SharpHolder-linux-x64.zip
        asset_content_type: application/zip
    - name: Upload Linux ARM64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/linux-arm64/SharpHolder-linux-arm64.zip
        asset_name: SharpHolder-linux-arm64.zip
        asset_content_type: application/zip
    - name: Upload OSX ARM64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/osx-arm64/SharpHolder-osx-arm64.zip
        asset_name: SharpHolder-osx-arm64.zip
        asset_content_type: application/zip